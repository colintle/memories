[{"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\index.js":"1","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\App.js":"2","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Form\\Form.js":"3","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Posts.js":"4","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Form\\styles.js":"6","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Post\\styles.js":"7","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\styles.js":"8","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\index.js":"9","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\posts.js":"10","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\actions\\posts.js":"11","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\api\\index.js":"12","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\constants\\actionsTypes.js":"13","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\NavBar\\NavBar.js":"14","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\NavBar\\styles.js":"15","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Home\\Home.js":"16","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Home\\styles.js":"17","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\Auth.js":"18","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\styles.js":"19","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\Input.js":"20","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\icon.js":"21","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\auth.js":"22","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\actions\\auth.js":"23","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Pagination.jsx":"24","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\styles.js":"25","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\PostDetails.js":"26","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\styles.js":"27","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\CommentSection.js":"28"},{"size":546,"mtime":1671306656565,"results":"29","hashOfConfig":"30"},{"size":1294,"mtime":1672362767500,"results":"31","hashOfConfig":"30"},{"size":3085,"mtime":1672195452485,"results":"32","hashOfConfig":"30"},{"size":819,"mtime":1672173500500,"results":"33","hashOfConfig":"30"},{"size":3626,"mtime":1672262666398,"results":"34","hashOfConfig":"30"},{"size":438,"mtime":1671299769669,"results":"35","hashOfConfig":"30"},{"size":1086,"mtime":1672183523657,"results":"36","hashOfConfig":"30"},{"size":278,"mtime":1671294620481,"results":"37","hashOfConfig":"30"},{"size":158,"mtime":1671474166125,"results":"38","hashOfConfig":"30"},{"size":1897,"mtime":1672260126769,"results":"39","hashOfConfig":"30"},{"size":2953,"mtime":1672259886359,"results":"40","hashOfConfig":"30"},{"size":1119,"mtime":1672258746089,"results":"41","hashOfConfig":"30"},{"size":419,"mtime":1672259833087,"results":"42","hashOfConfig":"30"},{"size":2295,"mtime":1672170845106,"results":"43","hashOfConfig":"30"},{"size":952,"mtime":1671465038118,"results":"44","hashOfConfig":"30"},{"size":3876,"mtime":1672362320447,"results":"45","hashOfConfig":"30"},{"size":413,"mtime":1672097361650,"results":"46","hashOfConfig":"30"},{"size":4610,"mtime":1672006839370,"results":"47","hashOfConfig":"30"},{"size":666,"mtime":1671467055084,"results":"48","hashOfConfig":"30"},{"size":1128,"mtime":1671830355315,"results":"49","hashOfConfig":"30"},{"size":514,"mtime":1671470549180,"results":"50","hashOfConfig":"30"},{"size":494,"mtime":1671833191231,"results":"51","hashOfConfig":"30"},{"size":689,"mtime":1672002177033,"results":"52","hashOfConfig":"30"},{"size":1002,"mtime":1672190124904,"results":"53","hashOfConfig":"30"},{"size":154,"mtime":1672067082009,"results":"54","hashOfConfig":"30"},{"size":3460,"mtime":1672257667253,"results":"55","hashOfConfig":"30"},{"size":1065,"mtime":1672258349393,"results":"56","hashOfConfig":"30"},{"size":2560,"mtime":1672260917080,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"qnmzav",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"61"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\index.js",[],[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\App.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Form\\Form.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Posts.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Post\\Post.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Form\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\Post\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Posts\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\index.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\posts.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\actions\\posts.js",["147"],[],"import { NativeSelect } from \"@material-ui/core\";\r\nimport * as api from \"../api\";\r\nimport { FETCH_ALL, FETCH_BY_SEARCH, UPDATE, CREATE, DELETE, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from \"../constants/actionsTypes\";\r\n\r\n//Actions Creators\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: START_LOADING});\r\n        const { data } = await api.fetchPosts(page);\r\n        const action = {type: FETCH_ALL, payload: data};\r\n        dispatch(action);\r\n        dispatch({type:END_LOADING});\r\n    }\r\n    catch (error){\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: START_LOADING});\r\n        const { data } = await api.fetchPost(id);\r\n        const action = {type: FETCH_POST, payload: data};\r\n        dispatch(action);\r\n        dispatch({type:END_LOADING});\r\n    }\r\n    catch (error){\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: START_LOADING});\r\n        const { data } = await api.fetchPostBySearch(searchQuery);\r\n        console.log(data);\r\n        const action = {type: FETCH_BY_SEARCH, payload: data};\r\n        dispatch(action);\r\n        dispatch({type:END_LOADING});\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post, navigate) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: START_LOADING});\r\n        const {data} = await api.createPost(post);\r\n        navigate(`/posts/${data._id}`);\r\n        const action = {type: CREATE, payload: data};\r\n        dispatch(action);\r\n        dispatch({type:END_LOADING});\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.updatePost(id, post);\r\n        const action = {type: UPDATE, payload: data};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try{\r\n        await api.deletePost(id);\r\n\r\n        const action = {type: DELETE, payload: id};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.likePost(id);\r\n\r\n        const action = {type: UPDATE, payload: data};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.comment(value, id);\r\n        const action = {type: COMMENT, payload: data};\r\n        dispatch(action);\r\n\r\n        return data.comments;\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\api\\index.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\constants\\actionsTypes.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\NavBar\\NavBar.js",["148"],[],"import React, {useState, useEffect} from 'react';\r\nimport { AppBar, Avatar, Toolbar, Typography, Button} from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport memoriesLogo from '../../images/memories-Logo.png';\r\nimport memoriesText from \"../../images/memories-Text.png\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction NavBar() {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        if (token)\r\n        {\r\n            const decodedToken = jwt_decode(token);\r\n            if (decodedToken.exp * 1000 < new Date().getTime())\r\n            {\r\n                logout();\r\n            }\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    const logout = () => {\r\n        dispatch({type: 'LOGOUT'});\r\n        setUser(null);\r\n        navigate(\"/auth\");\r\n    }\r\n\r\n    return (\r\n        <AppBar className = {classes.appBar} position='static' color='inherit'>\r\n            <Link to=\"/\" className={classes.brandContainer}>\r\n                <img src={memoriesText} alt='icon' height='45px'></img>\r\n                <img className = {classes.image}src={memoriesLogo} alt='memories' height='40px'></img>\r\n            </Link>\r\n            <Toolbar className={classes.toolbar}>\r\n                {user ? (\r\n                    <div className={classes.profile}>\r\n                        <Avatar className={classes.purple} alt={user.name} src={user.imageUrl}>{user.name.charAt(0)}</Avatar>\r\n                        <Typography className={classes.userName} variant='h6'>{user.name}</Typography>\r\n                        <Button variant='contained' className={classes.logout} color='secondary' onClick={logout}>Logout</Button>\r\n                    </div>\r\n                ) : (\r\n                    <Button component={Link} to='/auth' variant='contained' color='primary'>Sign In</Button>\r\n                )}\r\n            </Toolbar>   \r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\NavBar\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Home\\Home.js",["149","150","151"],[],"import React, {useState, useEffect} from 'react';\r\nimport {Container, Grow, Grid, Paper, AppBar, TextField, Button} from '@material-ui/core';\r\nimport { Form } from '../Form/Form';\r\nimport { Posts } from '../Posts/Posts';\r\nimport useStyles from \"./styles\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPosts, getPostsBySearch } from '../../actions/posts';\r\nimport Pagination from '../Pagination';\r\nimport {useLocation, useNavigate} from 'react-router-dom';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const query = useQuery();\r\n    const navigate = useNavigate();\r\n    const page = query.get('page') || 1;\r\n    const searchQuery = query.get('searchQuery');\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.keyCode === 13 ) // enter key\r\n        {\r\n            searchPost();\r\n        }\r\n    }\r\n\r\n    const handleAdd = (tag) => {\r\n        setTags([...tags, tag]);\r\n    }\r\n\r\n    const handleDelete = (tagToDelete) => {\r\n        setTags(tags.filter((tag) => tag !== tagToDelete));\r\n    }\r\n\r\n    const searchPost = () => {\r\n        if (search.trim() || tags)\r\n        {\r\n            dispatch(getPostsBySearch({search, tags: tags.join(\",\")}));\r\n            navigate(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n        }\r\n        else\r\n        {\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grow in>\r\n            <Container maxWidth='xl'>\r\n                <Grid className={classes.gridContainer} container justify-content='space-between' alignItems='stretch' spacing={3}>\r\n                    <Grid item xs={12} sm={6} md={9}>\r\n                        <Posts setCurrentId={setCurrentId}></Posts>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <AppBar className={classes.appBarSearch} position='static' color = 'inherit'>\r\n                            <TextField\r\n                                name='search'\r\n                                variant='outlined'\r\n                                label='Search Memories'\r\n                                onKeyPress={handleKeyPress}\r\n                                fullWidth\r\n                                value={search}\r\n                                onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                }}>\r\n                            </TextField>\r\n                            <ChipInput\r\n                                style={{margin: '10px 0'}}\r\n                                value={tags}\r\n                                onAdd={handleAdd}\r\n                                onDelete={handleDelete}\r\n                                label='Search Tags'\r\n                                variant='outlined'\r\n                            ></ChipInput>\r\n                            <Button onClick={searchPost} className={classes.searchButton} color='primary' variant='contained'>Search</Button>\r\n                        </AppBar>\r\n                        <Form currentId={currentId} setCurrentId={setCurrentId}></Form>\r\n                        {(!searchQuery && !tags.length) &&\r\n                            <Paper elevation={6} className={classes.pagination}>\r\n                                <Pagination page={page}></Pagination>\r\n                            </Paper>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Home\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\Auth.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\Input.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Auth\\icon.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\reducers\\auth.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\actions\\auth.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\Pagination.jsx",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\PostDetails.js",["152","153","154"],[],"import React, {useEffect} from 'react';\r\nimport {Paper, Typography, CircularProgress, Divider} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport {getPost, getPostsBySearch} from \"../../actions/posts\";\r\nimport CommentSection from './CommentSection';\r\n\r\nfunction PostDetails() {\r\n\r\n  const {post, posts, isLoading} = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post)\r\n    {\r\n      dispatch(getPostsBySearch({search: 'none', tags: post?.tags.join(',')}));\r\n    }\r\n  }, [post])\r\n\r\n  if (!post) return null;\r\n\r\n  if (isLoading){\r\n    return <Paper elevation={6} className={classes.loadingPaper}><CircularProgress size='7em'></CircularProgress> </Paper>\r\n  }\r\n\r\n  const recommendedPosts = posts.filter(({_id}) => _id !== post._id);\r\n  \r\n  const openPost = (id) => {\r\n    navigate(`/posts/${id}`);\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n      <div className={classes.card}>\r\n        <div className={classes.section}>\r\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n          <Divider style={{ margin: '20px 0' }} />\r\n          <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\r\n          <Divider style={{ margin: '20px 0' }} />\r\n          <CommentSection post={post}></CommentSection>\r\n          <Divider style={{ margin: '20px 0' }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n          <img className={classes.media} src={post.selectedFile} alt={(post.selectedFile) && post.title} />\r\n        </div>\r\n      </div>\r\n      {(recommendedPosts && (\r\n        <div className={classes.section}>\r\n          <Typography gutterBottom variant='h5'>You may also like:</Typography>\r\n          <Divider></Divider>\r\n          <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(({title, message, name, likes, selectedFile, _id}) => (\r\n              <div style={{margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\r\n                <Typography gutterBottom variant='h6'>\r\n                  {title}\r\n                </Typography>\r\n                <Typography gutterBottom variant='subtitle2'>\r\n                  {name}\r\n                </Typography>\r\n                <Typography gutterBottom variant='subtitle2'>\r\n                  {message}\r\n                </Typography>\r\n                <Typography gutterBottom variant='subtitle1'>\r\n                  Likes: {likes.length}\r\n                </Typography>\r\n                <img src={selectedFile} width='200px'></img>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default PostDetails","C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\styles.js",[],[],"C:\\Users\\ccoli\\Documents\\VSCode\\memories\\frontend\\src\\components\\PostDetails\\CommentSection.js",[],[],{"ruleId":"155","severity":1,"message":"156","line":1,"column":10,"nodeType":"157","messageId":"158","endLine":1,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":18,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":1,"column":26,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"164","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"165","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":25},{"ruleId":"159","severity":1,"message":"166","line":20,"column":6,"nodeType":"161","endLine":20,"endColumn":10,"suggestions":"167"},{"ruleId":"159","severity":1,"message":"166","line":27,"column":6,"nodeType":"161","endLine":27,"endColumn":12,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":79,"column":17,"nodeType":"171","endLine":79,"endColumn":55},"no-unused-vars","'NativeSelect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["172"],"'useEffect' is defined but never used.","'getPosts' is defined but never used.","'createBreakpoints' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["173"],["174"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, id]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch, post]",{"range":"185","text":"186"},[1043,1053],"[location, logout, user?.token]",[706,710],"[dispatch, id]",[852,858],"[dispatch, post]"]