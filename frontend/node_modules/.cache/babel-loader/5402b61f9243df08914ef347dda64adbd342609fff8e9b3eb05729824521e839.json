{"ast":null,"code":"import { FETCH_ALL, UPDATE, CREATE, DELETE, FETCH_BY_SEARCH } from \"../constants/actionsTypes\";\nconst postReducer = function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALL:\n      return {\n        ...posts,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      console.log(action.payload);\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\nexport default postReducer;","map":{"version":3,"names":["FETCH_ALL","UPDATE","CREATE","DELETE","FETCH_BY_SEARCH","postReducer","posts","action","type","payload","data","currentPage","numberOfPages","console","log","map","post","_id","filter"],"sources":["C:/Users/ccoli/Documents/VSCode/memories/frontend/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, UPDATE, CREATE, DELETE, FETCH_BY_SEARCH } from \"../constants/actionsTypes\";\r\n\r\nconst postReducer = (posts = [], action) => {\r\n    switch(action.type)\r\n    {\r\n        case FETCH_ALL:\r\n            return {\r\n                ...posts,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages\r\n            };\r\n        case FETCH_BY_SEARCH:\r\n            console.log(action.payload);\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n};\r\n\r\nexport default postReducer;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,eAAe,QAAQ,2BAA2B;AAE9F,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACnC,QAAOA,MAAM,CAACC,IAAI;IAEd,KAAKR,SAAS;MACV,OAAO;QACH,GAAGM,KAAK;QACRA,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;MAClC,CAAC;IACL,KAAKR,eAAe;MAChBS,OAAO,CAACC,GAAG,CAACP,MAAM,CAACE,OAAO,CAAC;MAC3B,OAAOF,MAAM,CAACE,OAAO;IACzB,KAAKP,MAAM;MACP,OAAO,CAAC,GAAGI,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC,KAAKR,MAAM;MACP,OAAOK,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKV,MAAM,CAACE,OAAO,CAACQ,GAAG,GAAGV,MAAM,CAACE,OAAO,GAAGO,IAAI,CAAC;IACvF,KAAKb,MAAM;MACP,OAAOG,KAAK,CAACY,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKV,MAAM,CAACE,OAAO,CAAC;IAC9D;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}