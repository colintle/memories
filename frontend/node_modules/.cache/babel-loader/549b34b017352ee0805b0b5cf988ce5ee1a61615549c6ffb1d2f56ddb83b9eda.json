{"ast":null,"code":"import * as api from \"../api\";\nimport { FETCH_ALL, FETCH_BY_SEARCH, UPDATE, CREATE, DELETE, START_LOADING, END_LOADING } from \"../constants/actionsTypes\";\n\n//Actions Creators\n\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    const action = {\n      type: FETCH_ALL,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPostBySearch(searchQuery);\n    const action = {\n      type: FETCH_BY_SEARCH,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    const action = {\n      type: CREATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    const action = {\n      type: UPDATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    const action = {\n      type: DELETE,\n      payload: id\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    const action = {\n      type: UPDATE,\n      payload: data\n    };\n    dispatch(action);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","FETCH_BY_SEARCH","UPDATE","CREATE","DELETE","START_LOADING","END_LOADING","getPosts","page","dispatch","data","fetchPosts","action","type","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/ccoli/Documents/VSCode/memories/frontend/src/actions/posts.js"],"sourcesContent":["import * as api from \"../api\";\r\nimport { FETCH_ALL, FETCH_BY_SEARCH, UPDATE, CREATE, DELETE, START_LOADING, END_LOADING } from \"../constants/actionsTypes\";\r\n\r\n//Actions Creators\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.fetchPosts(page);\r\n        const action = {type: FETCH_ALL, payload: data}\r\n        dispatch(action);\r\n    }\r\n    catch (error){\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.fetchPostBySearch(searchQuery);\r\n        const action = {type: FETCH_BY_SEARCH, payload: data};\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.createPost(post);\r\n        const action = {type: CREATE, payload: data};\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.updatePost(id, post);\r\n        const action = {type: UPDATE, payload: data};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try{\r\n        await api.deletePost(id);\r\n\r\n        const action = {type: DELETE, payload: id};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try{\r\n        const { data } = await api.likePost(id);\r\n\r\n        const action = {type: UPDATE, payload: data};\r\n\r\n        dispatch(action);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}