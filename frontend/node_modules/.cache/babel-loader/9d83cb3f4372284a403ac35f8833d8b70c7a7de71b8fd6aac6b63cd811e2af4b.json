{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`);\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPosts","page","get","fetchPostBySearch","searchQuery","search","tags","fetchPost","id","createPost","newPost","post","updatePost","updatedPost","patch","deletePost","delete","likePost","comment","value","signIn","formData","signUp"],"sources":["C:/Users/ccoli/Documents/VSCode/memories/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({baseURL: 'http://localhost:5000'});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('profile'))\r\n    {\r\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n    return req;\r\n});\r\n\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`);\r\n\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData); \r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAE5DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAClC;IACIF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC7F;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;AAEF,OAAO,MAAMQ,UAAU,GAAIC,IAAI,IAAKf,GAAG,CAACgB,GAAG,CAAE,eAAcD,IAAK,EAAC,CAAC;AAClE,OAAO,MAAME,iBAAiB,GAAIC,WAAW,IAAKlB,GAAG,CAACgB,GAAG,CAAE,6BAA4BE,WAAW,CAACC,MAAM,IAAI,MAAO,SAAQD,WAAW,CAACE,IAAK,EAAC,CAAC;AAC/I,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAKtB,GAAG,CAACgB,GAAG,CAAE,UAASM,EAAG,EAAC,CAAC;AACxD,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAClE,OAAO,MAAME,UAAU,GAAG,CAACJ,EAAE,EAAEK,WAAW,KAAK3B,GAAG,CAAC4B,KAAK,CAAE,UAASN,EAAG,EAAC,EAAEK,WAAW,CAAC;AACrF,OAAO,MAAME,UAAU,GAAIP,EAAE,IAAKtB,GAAG,CAAC8B,MAAM,CAAE,UAASR,EAAG,EAAC,CAAC;AAC5D,OAAO,MAAMS,QAAQ,GAAIT,EAAE,IAAKtB,GAAG,CAAC4B,KAAK,CAAE,UAASN,EAAG,WAAU,CAAC;AAClE,OAAO,MAAMU,OAAO,GAAG,CAACC,KAAK,EAAEX,EAAE,KAAKtB,GAAG,CAACyB,IAAI,CAAE,UAASH,EAAG,cAAa,CAAC;AAG1E,OAAO,MAAMY,MAAM,GAAIC,QAAQ,IAAKnC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEU,QAAQ,CAAC;AACtE,OAAO,MAAMC,MAAM,GAAID,QAAQ,IAAKnC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEU,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}