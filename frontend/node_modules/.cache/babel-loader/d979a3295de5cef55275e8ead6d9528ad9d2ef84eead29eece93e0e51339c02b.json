{"ast":null,"code":"import { FETCH_ALL, UPDATE, CREATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from \"../constants/actionsTypes\";\nconst postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload.data\n      };\n    case CREATE:\n      return [...state, action.payload];\n    case UPDATE:\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return state.filter(post => post._id !== action.payload);\n    default:\n      return state;\n  }\n};\nexport default postReducer;","map":{"version":3,"names":["FETCH_ALL","UPDATE","CREATE","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","postReducer","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"sources":["C:/Users/ccoli/Documents/VSCode/memories/frontend/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, UPDATE, CREATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from \"../constants/actionsTypes\";\r\n\r\nconst postReducer = (state = {isLoading: true, posts: []}, action) => {\r\n    switch(action.type)\r\n    {\r\n        case START_LOADING:\r\n            return {\r\n                ...state, \r\n                isLoading: true\r\n            };\r\n        case END_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages\r\n            };\r\n        case FETCH_BY_SEARCH:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data\r\n            };\r\n        case CREATE:\r\n            return [...state, action.payload];\r\n        case UPDATE:\r\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return state.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default postReducer;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,eAAe,EAAEC,aAAa,EAAEC,WAAW,QAAQ,2BAA2B;AAE1H,MAAMC,WAAW,GAAG,YAAkD;EAAA,IAAjDC,KAAK,uEAAG;IAACC,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC;EAAA,IAAEC,MAAM;EAC7D,QAAOA,MAAM,CAACC,IAAI;IAEd,KAAKP,aAAa;MACd,OAAO;QACH,GAAGG,KAAK;QACRC,SAAS,EAAE;MACf,CAAC;IACL,KAAKH,WAAW;MACZ,OAAO;QACH,GAAGE,KAAK;QACRC,SAAS,EAAE;MACf,CAAC;IACL,KAAKT,SAAS;MACV,OAAO;QACH,GAAGQ,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;MAClC,CAAC;IACL,KAAKZ,eAAe;MAChB,OAAO;QACH,GAAGI,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC;MAC1B,CAAC;IACL,KAAKZ,MAAM;MACP,OAAO,CAAC,GAAGM,KAAK,EAAEG,MAAM,CAACE,OAAO,CAAC;IACrC,KAAKZ,MAAM;MACP,OAAOO,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGK,IAAI,CAAC;IACvF,KAAKf,MAAM;MACP,OAAOK,KAAK,CAACY,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKR,MAAM,CAACE,OAAO,CAAC;IAC9D;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}